var S=Object.defineProperty,T=(o,a,e)=>a in o?S(o,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[a]=e,f=(o,a,e)=>(T(o,typeof a!="symbol"?a+"":a,e),e);function C(){return typeof self<"u"?fetch.bind(self):typeof global<"u"&&global.fetch?global.fetch:null}class m{constructor(){f(this,"API_URL","https://api.preklad.io/api/translate"),f(this,"_apiKey",""),f(this,"_fetch",C())}set apiKey(a){this._apiKey=a}get apiKey(){return this._apiKey}set fetch(a){this._fetch=a}get fetch(){return this._fetch}}const t=new m;class p extends Error{constructor(a,e){super(`Call to endpoint failed with the error code ${a}. ${e}`)}}var A=(o,a,e)=>new Promise((n,g)=>{var i=u=>{try{c(e.next(u))}catch(d){g(d)}},l=u=>{try{c(e.throw(u))}catch(d){g(d)}},c=u=>u.done?n(u.value):Promise.resolve(u.value).then(i,l);c((e=e.apply(o,a)).next())});function w(o){return A(this,arguments,function*(a,e={}){if(t.fetch===null)throw new Error("The fetch function was not found. If on NodeJS < 18 specify the fetch function with config.fetch");const n=yield t.fetch(a,e);return a.includes("/text")&&n.ok?n.text():n.json()})}var b=[{language:"Afrikaans",code:"af"},{language:"Albanian",code:"sq"},{language:"Amharic",code:"am"},{language:"Arabic",code:"ar"},{language:"Armenian",code:"hy"},{language:"Assamese",code:"as"},{language:"Aymara",code:"ay"},{language:"Azerbaijani",code:"az"},{language:"Bambara",code:"bm"},{language:"Basque",code:"eu"},{language:"Belarusian",code:"be"},{language:"Bengali",code:"bn"},{language:"Bhojpuri",code:"bho"},{language:"Bosnian",code:"bs"},{language:"Bulgarian",code:"bg"},{language:"Catalan",code:"ca"},{language:"Cebuano",code:"ceb"},{language:"Chinese (Simplified)",code:"zh-CN"},{language:"Chinese (Simplified)",code:"zh"},{language:"Chinese (Traditional)",code:"zh-TW"},{language:"Corsican",code:"co"},{language:"Croatian",code:"hr"},{language:"Czech",code:"cs"},{language:"Danish",code:"da"},{language:"Dhivehi",code:"dv"},{language:"Dogri",code:"doi"},{language:"Dutch",code:"nl"},{language:"English",code:"en"},{language:"Esperanto",code:"eo"},{language:"Estonian",code:"et"},{language:"Ewe",code:"ee"},{language:"Filipino (Tagalog)",code:"fil"},{language:"Finnish",code:"fi"},{language:"French",code:"fr"},{language:"Frisian",code:"fy"},{language:"Galician",code:"gl"},{language:"Georgian",code:"ka"},{language:"German",code:"de"},{language:"Greek",code:"el"},{language:"Guarani",code:"gn"},{language:"Gujarati",code:"gu"},{language:"Haitian Creole",code:"ht"},{language:"Hausa",code:"ha"},{language:"Hawaiian",code:"haw"},{language:"Hebrew",code:"he"},{language:"Hebrew",code:"iw"},{language:"Hindi",code:"hi"},{language:"Hmong",code:"hmn"},{language:"Hungarian",code:"hu"},{language:"Icelandic",code:"is"},{language:"Igbo",code:"ig"},{language:"Ilocano",code:"ilo"},{language:"Indonesian",code:"id"},{language:"Irish",code:"ga"},{language:"Italian",code:"it"},{language:"Japanese",code:"ja"},{language:"Javanese",code:"jv"},{language:"Javanese",code:"jw"},{language:"Kannada",code:"kn"},{language:"Kazakh",code:"kk"},{language:"Khmer",code:"km"},{language:"Kinyarwanda",code:"rw"},{language:"Konkani",code:"gom"},{language:"Korean",code:"ko"},{language:"Krio",code:"kri"},{language:"Kurdish",code:"ku"},{language:"Kurdish (Sorani)",code:"ckb"},{language:"Kyrgyz",code:"ky"},{language:"Lao",code:"lo"},{language:"Latin",code:"la"},{language:"Latvian",code:"lv"},{language:"Lingala",code:"ln"},{language:"Lithuanian",code:"lt"},{language:"Luganda",code:"lg"},{language:"Luxembourgish",code:"lb"},{language:"Macedonian",code:"mk"},{language:"Maithili",code:"mai"},{language:"Malagasy",code:"mg"},{language:"Malay",code:"ms"},{language:"Malayalam",code:"ml"},{language:"Maltese",code:"mt"},{language:"Maori",code:"mi"},{language:"Marathi",code:"mr"},{language:"Meiteilon (Manipuri)",code:"mni-Mtei"},{language:"Mizo",code:"lus"},{language:"Mongolian",code:"mn"},{language:"Myanmar (Burmese)",code:"my"},{language:"Nepali",code:"ne"},{language:"Norwegian",code:"no"},{language:"Nyanja (Chichewa)",code:"ny"},{language:"Odia (Oriya)",code:"or"},{language:"Oromo",code:"om"},{language:"Pashto",code:"ps"},{language:"Persian",code:"fa"},{language:"Polish",code:"pl"},{language:"Portuguese (Portugal, Brazil)",code:"pt"},{language:"Punjabi",code:"pa"},{language:"Quechua",code:"qu"},{language:"Romanian",code:"ro"},{language:"Russian",code:"ru"},{language:"Samoan",code:"sm"},{language:"Sanskrit",code:"sa"},{language:"Scots Gaelic",code:"gd"},{language:"Sepedi",code:"nso"},{language:"Serbian",code:"sr"},{language:"Sesotho",code:"st"},{language:"Shona",code:"sn"},{language:"Sindhi",code:"sd"},{language:"Sinhala (Sinhalese)",code:"si"},{language:"Slovak",code:"sk"},{language:"Slovenian",code:"sl"},{language:"Somali",code:"so"},{language:"Spanish",code:"es"},{language:"Sundanese",code:"su"},{language:"Swahili",code:"sw"},{language:"Swedish",code:"sv"},{language:"Tagalog (Filipino)",code:"tl"},{language:"Tajik",code:"tg"},{language:"Tamil",code:"ta"},{language:"Tatar",code:"tt"},{language:"Telugu",code:"te"},{language:"Thai",code:"th"},{language:"Tigrinya",code:"ti"},{language:"Tsonga",code:"ts"},{language:"Turkish",code:"tr"},{language:"Turkmen",code:"tk"},{language:"Twi (Akan)",code:"ak"},{language:"Ukrainian",code:"uk"},{language:"Urdu",code:"ur"},{language:"Uyghur",code:"ug"},{language:"Uzbek",code:"uz"},{language:"Vietnamese",code:"vi"},{language:"Welsh",code:"cy"},{language:"Xhosa",code:"xh"},{language:"Yiddish",code:"yi"},{language:"Yoruba",code:"yo"},{language:"Zulu",code:"zu"}],y=(o,a,e)=>new Promise((n,g)=>{var i=u=>{try{c(e.next(u))}catch(d){g(d)}},l=u=>{try{c(e.throw(u))}catch(d){g(d)}},c=u=>u.done?n(u.value):Promise.resolve(u.value).then(i,l);c((e=e.apply(o,a)).next())});const s=new Map;let h="en",r="";function K(o,a){return y(this,arguments,function*(e,n,g="en",i={}){if(!t.apiKey)throw new Error("API-KEY is not defined.");if(!e)throw new Error("Invalid input data.");if(g||(h||(g="en"),g=h),!n){if(!r)throw new Error("Target language code is not defined.");n=r}if(b.find(l=>l.code===g)===void 0)throw new Error("Source language code is not supported. "+g);if(b.find(l=>l.code===n)===void 0)throw new Error("Target language code is not supported."+n);if(typeof e=="string"){const l=yield M(e,g,n,i.ignoreWords);return i.noCache||v(l,n,g,e),h=g,r=n,l}else{const l=yield E(e,g,n,i.ignoreWords);return i.noCache||v(l,n,g),h=g,r=n,l}})}function v(o,a,e,n=""){const g=`${e}_${a}`,i=s.get(g)||{};if(typeof o=="string"){const l=k(n);i[l]=o,s.set(g,i)}else{for(const[l,c]of Object.entries(o))i[l]=c;s.set(g,i)}}function P(o,a,e){if(!o)return"";if(!a){if(!r)throw new Error("Target language code is not defined.");a=r}e||(e=h||"en");const n=`${e}_${a}`,g=s.get(n)||{};if(!g)return o;const i=g[o];if(i)return i;const l=k(o);return g[l]||o}function j(){s.clear()}function E(o,a,e,n){return y(this,null,function*(){const g=t.API_URL+"/json",i={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","X-Key":t.apiKey,"X-From":a,"X-To":e},body:JSON.stringify(o||{})};n?.length>0&&(i.headers["X-ignore"]=n.join(","));const l=yield w(g,i);if(l.errorCode!==void 0)throw new p(l.errorCode,l.message);return l.data})}function M(o,a,e,n){return y(this,null,function*(){const g=t.API_URL+"/text",i={method:"POST",headers:{"Content-Type":"text/plain",Accept:"text/plain","X-key":t.apiKey,"X-from":a,"X-to":e},body:o};n?.length>0&&(i.headers["X-ignore"]=n.join(","));const l=yield w(g,i);if(l.errorCode!==void 0)throw new p(l.errorCode,l.message);return l})}const k=o=>{let a=0;for(let e=0;e<o.length;e++){const n=o.charCodeAt(e);a=(a<<5)-a+n,a&=a}return new Uint32Array([a])[0].toString(36)},x={tr:K,find:P,clearCache:j,config:t};export{m as ApiConfig,p as ApiError,t as config,x as translation};
